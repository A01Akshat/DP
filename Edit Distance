class Solution {
    public int minDistance(String word1, String word2) {
        int n=word1.length();
        int m=word2.length();
        int dp[][]=new int[n][m];
        for(int i=0;i<n;i++)
        {
            for(int j=0;j<m;j++)
            {
                dp[i][j]=-1;
            }
        }
        return f(n-1,m-1,dp,word1,word2);
    }
    int f(int i,int j,int dp[][],String s1,String s2)
    {
        if(i<0)return j+1;
        if(j<0)return i+1;
        if(dp[i][j]!=-1)return dp[i][j];
        if(s1.charAt(i)==s2.charAt(j))
        {
            return dp[i][j]=0+f(i-1,j-1,dp,s1,s2);
        }
       
            return dp[i][j]=1+Math.min(f(i,j-1,dp,s1,s2),Math.min(f(i-1,j,dp,s1,s2),f(i-1,j-1,dp,s1,s2)));
        
    }
}
